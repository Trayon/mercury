#-----------------------------------------------------------------------------#
# Copyright (C) 1997-2000 The University of Melbourne. 
# This file may only be copied under the terms of the GNU General
# Public Licence - see the file COPYING in the Mercury distribution.
#-----------------------------------------------------------------------------#
#
# These rules define the main targets: depend, all, check.
#

MAIN_TARGET = check

include ../../Mmake.common
-include ../../Mmake.params

EXCEPTION_PROGS = \
	test_exceptions.m \
	test_exceptions_func.m \
	test_try_all.m \
	test_uncaught_exception.m \
	tricky_try_store.m

#
# XXX the following tests are not enabled because we do not pass them yet:
#	looptest.m
#		(fails in debugging grades, because debugging breaks
#		tail recursion optimization)
#	test_memo.m test_loop_check.m
#       	(those two tests test the combination of
#		tabling and exceptions).
#
# Also currently the compiler has a bug where it generates
# static ground terms even for things with `di' modes;
# tricky_try_store.m contains a work-around for that,
# which should be deleted once that bug is fixed.
#

# Deep profiling grades cannot yet handle catching exceptions, either
# explicitly or implicitly by the runtime system.

ifneq "$(findstring profdeep,$(GRADE))" ""
	PROGS=
else
	PROGS=$(EXCEPTION_PROGS)
endif

depend: $(PROGS:.m=.depend)
all: $(PROGS:.m=)
check: $(PROGS:.m=.res)

#-----------------------------------------------------------------------------#

MCFLAGS-looptest = --infer-all

# test_uncaught_exception is *supposed* to return an error exit status.
# We also need to pipe the output through sed to avoid hard-coding
# dependencies on particular line numbers in the standard library source code.
test_uncaught_exception.out: test_uncaught_exception
	if ./$< > $@.tmp 2>&1; then \
		grep . $@.tmp; \
		exit 1; \
	else \
		sed -e '/pred exception/s/exception.m:[0-9]*/exception.m:NNNN/g' \
			< $@.tmp > $@ ; \
		rm -f $@.tmp; \
	fi

#-----------------------------------------------------------------------------#
