#!/bin/sh
#
# This script runs the nightly bootstrap tests.
# It is invoked directly from cron, so it runs
# without a proper environment (PATH, etc.) set up.
#
# NB. Although this file is under CVS control,
# the copy that is used by cron does not get
# automatically updated from the CVS repository.
# After any modifications, the master copy
# in /home/mercury/public/test_mercury/scripts
# should be updated manually.

#-----------------------------------------------------------------------------#

tmpfile=/tmp/run_test$$
tmpscript=/tmp/test_mercury$$
mail_subject=/tmp/test_mercury_mail$$
trap 'rm -f $tmpfile $tmpscript $mail_subject; exit 1' 1 2 3 13 15

#-----------------------------------------------------------------------------#

ulimit -c 0

C_COMPILER=gcc
BRANCH=
case $# in
	1)	HOST=$1 ;;
	2)	HOST=$1; C_COMPILER=$2 ;;
	3)	HOST=$1; C_COMPILER=$2; BRANCH=$3 ;;
	*)	echo "Usage: $0 host [c-compiler] [branch]" 1>&2; exit 1 ;;
esac

case $HOST in
	munta) 		ARCH=sgi	FULLARCH=mips-sgi-irix5.2 ;;
	muse) 		ARCH=sgi	FULLARCH=mips-sgi-irix5.3 ;;
	kryten) 	ARCH=sparc	FULLARCH=sparc-sun-solaris2.5 ;;
	taifun) 	ARCH=sparc	FULLARCH=sparc-sun-solaris2.7 ;;
	murlibobo) 	ARCH=alpha	FULLARCH=alphaev5-dec-osf5.1 ;;
	mundook) 	ARCH=alpha	FULLARCH=alpha-dec-osf3.2 ;;
	quicksilver) 	ARCH=i586	FULLARCH=i586-pc-linux-gnu ;;
	hg) 		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	hydra)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	ender)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	roy)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	venus)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	earth)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	mars)		ARCH=i686	FULLARCH=i686-pc-linux-gnu ;;
	*)		echo "$0: unknown HOST $HOST" 1>&2; exit 1 ;;
esac

#-----------------------------------------------------------------------------#

PATH="$HOME/bin/$ARCH`awk '/^[^#]/{printf ":%s",$0;}' /home/pgrad/fjh/.path`"
PATH="/home/mercury/public/mercury-0.5/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/mercury-0.6/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/mercury-latest/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/nuprolog/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/gcc-2.7.2/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/egcs-1.1b/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/autoconf-2.4/$FULLARCH/bin:$PATH"
PATH="/home/mercury/public/sicstus3/$HOST:$PATH"
PATH="/home/mercury/public/$HOST:$PATH"
export PATH

CVSROOT=/home/mercury1/repository
export CVSROOT

#-----------------------------------------------------------------------------#

# Redirect all output to $tmpfile to stop cron mailing
# content-free messages to mercury@cs.mu.oz.au.
{
tm_dir=/home/mercury/public/test_mercury

cd /home/mercury/public/test_mercury/scripts;
cvs checkout mercury/tools/test_mercury
cp mercury/tools/test_mercury $tmpscript

cvs checkout mercury/tools/generate_index_html

#-----------------------------------------------------------------------------#

case "$BRANCH" in
    "")
        DAY=`date '+%e'`
        case $HOST in
	    hg)
		# XXX The release branch doesn't compile on hg due
		# to problems with the GCC back-end.
	    	BRANCH=latest
		;;
	    murlibobo|taifun|hg|hydra|mars)
		#
		# For these hosts:
		# On odd-numbered days, test the release branch.
		# On even-numbered days, test the main branch.
		#
		case $DAY in
			*[13579]) BRANCH=0.10 ;;
			*)	  BRANCH=latest ;;
		esac
		;;
	    *)
		#
		# For the remaining hosts, do the reverse:
		# On odd-numbered days, test the main branch.
		# On even-numbered days, test the release branch.
		#
		case $DAY in
			*[13579]) BRANCH=latest ;;
			*)	  BRANCH=0.10 ;;
		esac
		;;
        esac
        ;;
esac

#-----------------------------------------------------------------------------#

echo run_test $HOST $C_COMPILER
echo branch $BRANCH

case "$C_COMPILER" in
	gcc)	logname="test-$BRANCH-$HOST.out" ;;
	*)	logname="test-$BRANCH-$HOST-$C_COMPILER.out" ;;
esac

mv -f $tm_dir/logs/old/$logname $tm_dir/logs/old2 2>/dev/null
mv -f $tm_dir/logs/old/$logname.errs $tm_dir/logs/old2 2>/dev/null
mv -f $tm_dir/logs/$logname $tm_dir/logs/old 2>/dev/null
mv -f $tm_dir/logs/$logname.errs $tm_dir/logs/old 2>/dev/null
logfile="$tm_dir/logs/$logname"

if nice -5 sh $tmpscript $HOST $ARCH $FULLARCH $BRANCH $C_COMPILER \
		> $logfile 2>&1
then
	test_status="succeeded"
	fgrep '**' $logfile > $logfile.errs
	if [ -s $logfile.errs ]; then
		echo "test passed (with some errors supressed/ignored)"
		echo "log file summary in $logfile.errs"
	else
		rm -f $logfile.errs
		echo "test passed"
	fi
	echo
	echo last 20 lines of log file:
	tail -20 $logfile
	echo
	case $HOST in
		hg) base=/home/hg ;;
		*) base=/home/mercury ;;
	esac
	cd $base/public/mercury-latest/$FULLARCH/lib/mercury/bin/$FULLARCH
	ls -l mercury_compile
	size mercury_compile
	{
		echo $FULLARCH $BRANCH $HOST $C_COMPILER
		ls -l mercury_compile
		size mercury_compile
		echo
	} >> $tm_dir/logs/sizes
else
	test_status="FAILED"
	fgrep '**' $logfile > $logfile.errs
	echo test FAILED
	echo log file in $logfile
	echo log file summary in $logfile.errs
	echo
	echo last 20 lines of log file:
	tail -20 $logfile
fi

# We can't just set a variable containing the mail subject string
# because sh (but not bash) executes compound commands with redirection
# in a sub-shell.
echo "test_mercury $test_status: $BRANCH $HOST $C_COMPILER" > $mail_subject
} > $tmpfile 2>&1

# NB we can't just pipe into `mutt' because the $mail_subject file
# needs to be written before `mutt' is started.
mutt -s "`cat $mail_subject`" stayl < $tmpfile
rm -f $tmpfile $tmpscript $mail_subject

#-----------------------------------------------------------------------------#
